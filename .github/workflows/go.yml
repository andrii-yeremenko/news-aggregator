name: ci

permissions: {}

on:
  pull_request:
    branches-ignore:
      - 'docbook/**'
    types: [opened, synchronize, reopened]
  schedule:
    - cron: '30 5 * * 2,4'
  workflow_dispatch:
  
  workflow_call:
    inputs:
      skipTests:
        description: 'Skip tests, useful when there is a dedicated CI job for tests'
        default: false
        required: false
        type: boolean

concurrency:
  group: ci
  cancel-in-progress: false

jobs:
  run:
    if: github.event_name != 'pull_request' || github.event.pull_request.labels.*.name != 'docbook'
    name: CI
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: true
    
    steps:
      - name: Log Machine Info
        run: |
          echo "Running on machine: ${{ runner.os }}"
          echo "Current directory: $(pwd)"
          echo "Available CPUs: $(nproc)"
          echo "Memory information: $(free -m)"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Verify Go installation
        run: go version

      - name: Go Format
        run: |
          echo "Running gofmt"
          gofmt -s -w . && git diff --exit-code

      - name: Go Tidy
        run: |
          echo "Running go mod tidy"
          go mod tidy && git diff --exit-code

      - name: Go Mod
        run: |
          echo "Running go mod download"
          go mod download

      - name: Go Mod Verify
        run: |
          echo "Verifying go modules"
          go mod verify

      - name: Go Build
        run: |
          echo "Building Go application"
          go build -o /dev/null ./...

      - name: Go Test
        if: ${{ !inputs.skipTests }}
        run: |
          echo "Running Go tests"
          go test -v -count=1 -race -shuffle=on -coverprofile=coverage.txt ./...
