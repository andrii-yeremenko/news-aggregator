name: Go Test and Coverage

on:
  pull_request:
    branches-ignore:
      - 'docbook/**'
    types: [opened, synchronize, reopened]
  schedule:
    - cron: '30 5 * * 2,4'
  workflow_dispatch:
  
  workflow_call:
    inputs:
      skipTests:
        description: 'Skip tests, useful when there is a dedicated CI job for tests'
        default: false
        required: false
        type: boolean

concurrency:
  group: Go-Test-Coverage
  cancel-in-progress: false

jobs:
  run:
    if: github.event_name != 'pull_request' || github.event.pull_request.labels.*.name != 'docbook'
    name: Go Test and Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Verify Go installation
        run: go version

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install dependencies
        run: go mod download

      - name: Run tests with coverage
        run: go test -coverprofile=coverage.out -v ./...

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.out
