version: '3'

env:
  DOCKER_IMAGE_NAME: "news-updater"
  DOCKERFILE_PATH: "Dockerfile"
  DOCKER_TAG: "1.0.0"
  AWS_ACCOUNT_ID: "406477933661"
  AWS_REGION: "us-east-1"

output:
  group:
    begin: '::group::{{.TASK}}'
    end: '::endgroup::'

tasks:
  aws-auth-docker:
    desc: "Authenticate Docker with AWS ECR"
    cmds:
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  download:
    desc: "Download all dependencies"
    cmd: |
      go mod download

  tidy:
    desc: "Tidies the Go module dependencies"
    cmd: |
      go mod tidy

  generate:
    desc: Generate all mocks
    cmds:
      - go install github.com/golang/mock/mockgen@v1.6.0
      - go generate ./...

  test:
    desc: "Run all tests"
    deps:
      - generate
    cmd: |
      go test ./...

  fmt:
    desc: "Run go fmt on all Go files"
    cmd: |
      go fmt ./...

  build:
    desc: "Build the updater"
    cmd: |
      go build -o news-updater main.go
  run:
    desc: "Run the updater"
    cmd: |
      go run main.go    

  docker-build:
    desc: "Build the Docker image"
    cmd: |
      docker build -t $DOCKER_IMAGE_NAME:$DOCKER_TAG -f $DOCKERFILE_PATH .

  docker-push-aws:
    desc: "Push the Docker image to AWS ECR"
    deps:
      - aws-auth-docker
      - docker-build
    cmd: |
      aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      docker tag $DOCKER_IMAGE_NAME:$DOCKER_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE_NAME:$DOCKER_TAG
      docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE_NAME:$DOCKER_TAG