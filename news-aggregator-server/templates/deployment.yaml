apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { .Release.Name } }-deployment
  namespace: { { .Values.namespace.name } }
spec:
  replicas: { { .Values.replicaCount } }
  selector:
    matchLabels:
      app: { { .Release.Name } }
  template:
    metadata:
      labels:
        app: { { .Release.Name } }
    spec:
      serviceAccountName: { { .Values.serviceAccountName } }
      containers:
        - name: { { .Chart.Name } }
          image: { { .Values.image.repository } }:{{ .Values.image.tag }}
          ports:
              - containerPort: { { .Values.service.port } }
          resources:
            requests:
              memory: { { .Values.resources.requests.memory } }
              cpu: { { .Values.resources.requests.cpu } }
            limits:
              memory: { { .Values.resources.limits.memory } }
              cpu: { { .Values.resources.limits.cpu } }
          volumeMounts:
            - mountPath: "/resources"
              name: { { .Values.resourcesStorage.name } }
            - mountPath: "/config"
              name: { { .Values.configStorage.name } }
      volumes:
        - name: { { .Values.resourcesStorage.name } }
          persistentVolumeClaim:
            claimName: { { .Values.resourcesStorage.persistentVolumeClaim } }
        - name: { { .Values.configStorage.name } }
          persistentVolumeClaim:
            claimName: { { .Values.configStorage.persistentVolumeClaim } }